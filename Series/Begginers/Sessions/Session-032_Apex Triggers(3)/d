public class AccountTriggerHandler {

    public static void handleBeforeInsert(List<Account> lstNewAccounts,Map<Id,Account> mapNewAccounts) {
        setInitialIndustry(lstNewAccounts);
        setPriority(lstNewAccounts);
    }

    
    public static void handleBeforeUpdate(List<Account> lstNewAccounts,List<Account> lstOldAccounts,Map<Id, Account> mapNewAccounts, Map<Id, Account> mapOldAccounts) {
        validateAnnualRevenue(lstNewAccounts,mapOldAccounts);
    }
    
    ///////////////Start Private Methods/////////////////////////////////////
    private static void validateAnnualRevenue(List<Account> lstNewAccounts,Map<Id, Account> mapOldAccounts){
        for (Account acc : lstNewAccounts) {
            Account oldAcc = mapOldAccounts.get(acc.Id);
            if (acc.AnnualRevenue < 1000000 && acc.AnnualRevenue < oldAcc.AnnualRevenue) {
                acc.addError('Annual Revenue cannot be reduced below $1,000,000.');
            }
        }
    }
    
    private static void setPriority(List<Account> lstNewAccounts){
    }
    
    private static void setInitialIndustry(List<Account> lstNewAccounts){
        for (Account acc : lstNewAccounts) {
            if (acc.Industry == null) {
                acc.Industry = 'Technology';
            }
        }
    }
}